#!/usr/bin/env python
#-*-coding:utf-8-*-

'''
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2.
The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8.
However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk,
for which their sum and difference are pentagonal and
D = |Pk − Pj| is minimised; what is the value of D?
'''

import math
import timeit


def is_pentagonal(pn):
    if (1+math.sqrt(1+24*pn)) % 6 == 0:
        return True
    else:
        return False


def calc():
    n = 0
    pentagonals = []
    while True:
        n += 1
        pn = n*(3*n-1)/2
        for p in pentagonals[::-1]:
            if is_pentagonal(pn+p) and is_pentagonal(pn-p):
                return pn-p
        pentagonals.append(pn)


if __name__ == '__main__':
    print calc()
    print timeit.Timer('problem_044.calc()', 'import problem_044').timeit(1)
